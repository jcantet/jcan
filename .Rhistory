https://cran.rstudio.com/bin/windows/Rtools/
theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.background = element_rect(fill = "#FEFBF8"),
# Paneau principal
panel.border = element_rect(colour = NA, fill = NA),
panel.background = element_rect(fill = "#FEFBF8"),
# Grilles
panel.grid.major.x = element_line(colour = "steelblue2", linetype = 3, size = 0.1),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(colour = "steelblue2", linetype = 3, size = 0.1),
panel.grid.minor.y = element_blank(),
# Facette
strip.background = element_rect(fill = "#736364"),
strip.text = element_text(color = "white", face = "bold", size = 9),
# Modification du texte
axis.text = element_text(colour = "steelblue4", face = "italic", size = 10),
axis.text.y = element_text(vjust = 0.35, margin = margin(r = 5)),
axis.title = element_text(colour = "steelblue4", face = "bold", size = 12),
axis.title.x = element_text(vjust = 0, hjust = 0.98),
axis.title.y = element_text(vjust = 2, hjust = 0.98),
axis.ticks = element_line(colour = "steelblue4"),
plot.title = element_text(size = 16, face = 'bold', hjust = 0, vjust = 1),
plot.subtitle = element_text(size = 13, face = 'italic'),
plot.caption = element_text(size = 9, face = "italic", vjust = -1),
legend.title = element_text(size = 11, face = "bold"))
usethis::use_vignette("comment-utiliser-mon-package")
install.packages("rmarkdown")
usethis::use_vignette("comment-utiliser-mon-package")
devtools::use_package("ggplot2")
library(devtools)
devtools::use_package("ggplot2")
usethis::use_package("ggplot2")
library(jcan)
devtools::use_package("grDevices")
usethis::use_package("grDevices")
library(jcan)
#' Palette de couleurs personnalisées adaptées au thème personnalisé
#'
#' @return La fonction permet d'utiliser la palette de couleurs personnalisées
#' @export
# Set de couleurs
jcan_colors <- c(
`bleu`  = "#235789",
`bleu clair` = "#3F88C5",
`rouge` = "#DB3A34",
`vert` = "#078339",
`vert clair` = "#5FAD41",
`orange` = "#FF8C42",
`bleu gris` = "#4F5D75",
`jaune` = "#FFBA08",
`violet` = "#7F2982",
`blanc` = "#EDF4F9")
usethis::use_data(jcan_colors)
#' Multiples palettes avec les couleurs personnalisées
#'
#' @return On définit les différentes palettes
#' @export
# Palette
jcan_palettes <- list(
`principale` = jcan_cols("bleu clair", "rouge","vert","orange","violet","jaune","bleu gris","vert clair"),
`progressive bleue` = jcan_cols("bleu clair", "blanc"),
`progressive rouge` = jcan_cols("rouge", "blanc"),
`divergente` = jcan_cols("bleu clair" ,"blanc","rouge")
)
usethis::use_data(jcan_palettes, overwrite = TRUE)
library(jcan)
library(jcan)
library(jcan)
jcan::scale_color_jcan()
library(jcan)
library(jcan)
#' Palette de couleurs personnalisées adaptées au thème personnalisé
#'
#' @return La fonction permet d'utiliser la palette de couleurs personnalisées
#' @export
# Set de couleurs
jcan_colors <- c(
`bleu`  = "#235789",
`bleu clair` = "#3F88C5",
`rouge` = "#DB3A34",
`vert` = "#078339",
`vert clair` = "#5FAD41",
`orange` = "#FF8C42",
`bleu gris` = "#4F5D75",
`jaune` = "#FFBA08",
`violet` = "#7F2982",
`blanc` = "#EDF4F9")
usethis::use_data_table(jcan_colors,overwrite = TRUE)
usethis::use_data_table(jcan_colors)
library(jcan)
library(jcan)
theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.background = element_rect(fill = "#FEFBF8"),
# Paneau principal
panel.border = element_rect(colour = NA, fill = NA),
panel.background = element_rect(fill = "#FEFBF8"),
# Grilles
panel.grid.major.x = element_line(colour = "steelblue2", linetype = 3, size = 0.1),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(colour = "steelblue2", linetype = 3, size = 0.1),
panel.grid.minor.y = element_blank(),
# Facette
strip.background = element_rect(fill = "#736364"),
strip.text = element_text(color = "white", face = "bold", size = 9),
# Modification du texte
axis.text = element_text(colour = "steelblue4", face = "italic", size = 10),
axis.text.y = element_text(vjust = 0.35, margin = margin(r = 5)),
axis.title = element_text(colour = "steelblue4", face = "bold", size = 12),
axis.title.x = element_text(vjust = 0, hjust = 0.98),
axis.title.y = element_text(vjust = 2, hjust = 0.98),
axis.ticks = element_line(colour = "steelblue4"),
plot.title = element_text(size = 15, face = 'bold', hjust = 0, vjust = 1, family = "Roboto Condensed"),
plot.subtitle = element_text(size = 12, face = 'italic'),
plot.caption = element_text(size = 9, face = "italic", vjust = -1),
legend.title = element_text(size = 11, face = "bold"))
theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.background = element_rect(fill = "#FEFBF8")),
# Paneau principal
panel.border = element_rect(colour = NA, fill = NA),
panel.background = element_rect(fill = "#FEFBF8"),
# Grilles
panel.grid.major.x = element_line(colour = "steelblue2", linetype = 3, size = 0.1),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(colour = "steelblue2", linetype = 3, size = 0.1),
panel.grid.minor.y = element_blank(),
# Facette
strip.background = element_rect(fill = "#736364"),
strip.text = element_text(color = "white", face = "bold", size = 9),
# Modification du texte
axis.text = element_text(colour = "steelblue4", face = "italic", size = 10),
axis.text.y = element_text(vjust = 0.35, margin = margin(r = 5)),
axis.title = element_text(colour = "steelblue4", face = "bold", size = 12),
axis.title.x = element_text(vjust = 0, hjust = 0.98),
axis.title.y = element_text(vjust = 2, hjust = 0.98),
axis.ticks = element_line(colour = "steelblue4"),
plot.title = element_text(size = 15, face = 'bold', hjust = 0, vjust = 1, family = "Roboto Condensed"),
plot.subtitle = element_text(size = 12, face = 'italic'),
plot.caption = element_text(size = 9, face = "italic", vjust = -1),
legend.title = element_text(size = 11, face = "bold"))
library(jcan)
library(jcan)
